#include <iostream>
#include <vector>

using namespace std;

vector<int> Recursive_Activity_Selector(int* S, int* F, int k, int n)
{
    int m=k+1;
    while(m<n and S[m]<F[k]){m++;}
    vector<int> A;
    vector<int> temp;
    if(m<n)
    {
         A.push_back(S[m]);
         temp=Recursive_Activity_Selector(S,F,m,n);
         for(int i=0; i< temp.size();i++)
         {
            A.push_back(temp[i]);
         }
         return A;
   }
    else
    {
        return A;
    }
}

vector<int> Greedy_Activity_Selector(int* S, int * F,int n)
{
    vector<int> A;
    A.push_back(S[0]);
    int k=0;
    for(int m=1; m<n;m++)
    {
        if (S[m]>=F[k])
        {
            A.push_back(S[m]);
            k=m;
        }
    }
    return A;
}
int main()
{
    cout << "Greedy" << endl;
    int S[]={1,3,0,5,3,5,6, 8, 8, 2, 12};
    int F[]={4,5,6,7,9,9,10,11,12,14,16};
    vector<int>A;
    A=Greedy_Activity_Selector(S,F,11);
    int t=A.size();
    for(int i=0;i<t;i++)
    {
        cout<<A[i]<<endl;
    }
    cout << "Recursivo" << endl;
    A=Recursive_Activity_Selector(S,F,-1,11);
    t=A.size();
    for(int i=0;i<t;i++)
    {
        cout<<A[i]<<endl;
    }
    return 0;
}
